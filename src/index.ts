// functions
export { addVectors } from './functions/addVectors'
export { angleFrom } from './functions/angleFrom'
export { bilerp } from './functions/bilerp'
export { cols } from './functions/cols'
export { createEasingFunction } from './functions/createEasingFunction'
export { deepEqual } from './functions/deepEqual'
export { degreesToRadians } from './functions/degreesToRadians'
export { entries } from './functions/entries'
export { flattenCols } from './functions/flattenCols'
export { flattenRows } from './functions/flattenRows'
export { flip } from './functions/flip'
export { hslToRgb } from './functions/hslToRgb'
export { intersect } from './functions/intersect'
export { isEmail } from './functions/isEmail'
export { isEven } from './functions/isEven'
export { keys } from './functions/keys'
export { lerp } from './functions/lerp'
export { lerpColors } from './functions/lerpColors'
export { lerpVectors } from './functions/lerpVectors'
export { measure } from './functions/measure'
export { parse, stringify } from './functions/json'
export { parseColor } from './functions/parseColor'
export { polygon } from './functions/polygon'
export { radiansToDegrees } from './functions/radiansToDegrees'
export { rgbToHsl } from './functions/rgbToHsl'
export { roll } from './functions/roll'
export { rotateMatrix } from './functions/rotateMatrix'
export { rotateVector } from './functions/rotateVector'
export { rows } from './functions/rows'
export { scale } from './functions/scale'
export { slope } from './functions/slope'
export { stringifyColor } from './functions/stringifyColor'
export { toKeyedObjects } from './functions/toKeyedObjects'
export * from './functions/ease'

// types
export { AllEqual } from './types/AllEqual'
export { BreakWords } from './types/BreakWords'
export { Byte } from './types/Byte'
export { CamelCase } from './types/CamelCase'
export { CamelCaseKeys } from './types/CamelCaseKeys'
export { CamelCaseKeysDeep } from './types/CamelCaseKeysDeep'
export { Difference } from './types/Difference'
export { Equal } from './types/Equal'
export { Expect } from './types/Expect'
export { First } from './types/First'
export { Hex } from './types/Hex'
export { Intersection } from './types/Intersection'
export { Join } from './types/Join'
export { Json, UnwrapJson } from './types/Json'
export { KebabCase } from './types/KebabCase'
export { KebabCaseKeys } from './types/KebabCaseKeys'
export { KebabCaseKeysDeep } from './types/KebabCaseKeysDeep'
export { Last } from './types/Last'
export { Line } from './types/Line'
export { MapCapitalize } from './types/MapCapitalize'
export { MapLowercase } from './types/MapLowercase'
export { MapUppercase } from './types/MapUppercase'
export { Methods } from './types/Methods'
export { Not } from './types/Not'
export { OmitStartsWith } from './types/OmitStartsWith'
export { OmitType } from './types/OmitType'
export { Opaque } from './types/Opaque'
export { OptionalKeys } from './types/OptionalKeys'
export { PascalCase } from './types/PascalCase'
export { PascalCaseKeys } from './types/PascalCaseKeys'
export { PascalCaseKeysDeep } from './types/PascalCaseKeysDeep'
export { PickStartsWith } from './types/PickStartsWith'
export { PickType } from './types/PickType'
export { Pop } from './types/Pop'
export { Properties } from './types/Properties'
export { RequiredKeys } from './types/RequiredKeys'
export { ScreamingSnakeCase } from './types/ScreamingSnakeCase'
export { ScreamingSnakeCaseKeys } from './types/ScreamingSnakeCaseKeys'
export { ScreamingSnakeCaseKeysDeep } from './types/ScreamingSnakeCaseKeysDeep'
export { Shift } from './types/Shift'
export { SnakeCase } from './types/SnakeCase'
export { SnakeCaseKeys } from './types/SnakeCaseKeys'
export { SnakeCaseKeysDeep } from './types/SnakeCaseKeysDeep'
export { Split } from './types/Split'
export { StartsWith } from './types/StartsWith'
export { SymmetricDifference } from './types/SymmetricDifference'
export { Transparent } from './types/Transparent'
export { UnwrapOpaque } from './types/UnwrapOpaque'
export { ValueOf } from './types/ValueOf'
export { Vector } from './types/Vector'
export { Without } from './types/Without'
export { XOR } from './types/XOR'

export const version = 'x.y.z'
